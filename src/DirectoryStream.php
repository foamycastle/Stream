<?php

namespace Foamycastle\Utilities;

interface DirectoryStream
{

    /**
     * Close directory handle. This method is called in response to `closedir()`. Any resources which were locked, or allocated, during opening and use of the directory stream should be released.
     * @return bool Returns true on success or false on failure.
     */
    public function dir_closedir():bool;

    /**
     * Open directory handle. This method is called in response to `opendir()`.
     * @param string $path Specifies the URL that was passed to `opendir()`. <b>Note:</b> The URL can be broken apart with parse_url().
     * @param int $options
     * @return bool Returns true on success or false on failure.
     */
    public function dir_opendir(string $path, int $options):bool;

    /**
     * Read entry from directory handle. This method is called in response to `readdir()`.
     * @return string|false Should return string representing the next filename, or false if there is no next file.<b>Note:</b> The return value will be cast to string.
     */
    public function dir_readdir():string|false;

    /**
     * Rewind directory handle. This method is called in response to `rewinddir()`. Should reset the output generated by streamWrapper::dir_readdir(). i.e.: The next call to `streamWrapper::dir_readdir()` should return the first entry in the location returned by `streamWrapper::dir_opendir()`.
     * @return bool Returns true on success or false on failure.
     */
    public function dir_rewinddir():bool;

    /**
     * Create a directory. This method is called in response to `mkdir()`. In order for the appropriate error message to be returned this method should not be defined if the wrapper does not support creating directories.
     * @param $path string Directory which should be created.
     * @param int $mode The value passed to mkdir().
     * @param int $options A bitwise mask of values, such as `STREAM_MKDIR_RECURSIVE`.
     * @return bool Returns true on success or false on failure.
     */
    public function mkdir(string $path, int $mode, int $options):bool;

    /**
     * Removes a directory. This method is called in response to `rmdir()`. <b>Note:</b> In order for the appropriate error message to be returned this method should not be defined if the wrapper does not support removing directories.
     * @param string $path The directory URL which should be removed.
     * @param int $options A bitwise mask of values, such as STREAM_MKDIR_RECURSIVE.
     * @return bool Returns true on success or false on failure.
     */
    public function rmdir(string $path, int $options):bool;

    /**
     * Renames a file or directory This method is called in response to `rename()`. Should attempt to rename `path_from` to `path_to`.
     * @param string $path_from The URL to the current file.
     * @param string $path_to The URL which the path_from should be renamed to.
     * @return bool Returns true on success or false on failure.
     */
    public function rename(string $path_from, string $path_to):bool;
}